import os
import sys
import re

def convert_line(line):
    match = re.match(r'^(\d+) (b?)([\'"])?(.*?)([\'"])? (\d+)$', line.strip())
    if not match:
        return None
    
    index = int(match.group(1))
    is_bytes = bool(match.group(2))
    str_content = match.group(4)
    
    str_content = str_content.replace('"', '\\"')
    
    # remove b prefix
    c_str = f'"{str_content}"' if not is_bytes else f'"{str_content}"'
    
    return f'    [{index}] = {c_str},'

if len(sys.argv) < 2:
    print('Usage: python vocab_converter.py <input_file>')
    sys.exit(1)

input_file = os.path.abspath(sys.argv[1])
if not os.path.exists(input_file):
    print(f'File {input_file} not found')
    sys.exit(1)

print('// GENERATED BY utils/vocab_converter.py') 
print('#ifndef VOCAB_H')
print('#define VOCAB_H')
print('const char *_vocab[] = {')

vocab_size = 0
with open(input_file, 'r', encoding='utf-8') as f:
    for line in f:
        converted = convert_line(line)
        if converted:
            vocab_size += 1
            print(converted)

print('};')
print(f'#define _VOCAB_SIZE {vocab_size}')
print('#endif')

